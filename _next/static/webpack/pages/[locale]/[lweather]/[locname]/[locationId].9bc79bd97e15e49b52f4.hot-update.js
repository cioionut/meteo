/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/[locale]/[lweather]/[locname]/[locationId]",{

/***/ "./src/lib/get5Days3hForecast.js":
/*!***************************************!*\
  !*** ./src/lib/get5Days3hForecast.js ***!
  \***************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"cwSwrConfig\": function() { return /* binding */ cwSwrConfig; },\n/* harmony export */   \"use5Days3hWeather\": function() { return /* binding */ use5Days3hWeather; }\n/* harmony export */ });\n/* harmony import */ var swr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! swr */ \"./node_modules/swr/esm/index.js\");\n/* harmony import */ var _fetchUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./fetchUtils */ \"./src/lib/fetchUtils.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\nvar _s = $RefreshSig$();\n\n\n // import initWData from '../../data/init_fday5_weather';\n// set global SWR config\n\nvar cwSwrConfig = {\n  // 'initialData': initWData,\n  'revalidateOnMount': true,\n  'revalidateOnFocus': false,\n  'revalidateOnReconnect': false,\n  'dedupingInterval': 10 * 60 * 1000,\n  'focusThrottleInterval': 10 * 60 * 1000,\n  'errorRetryCount': 0\n};\nfunction use5Days3hWeather(location, locale) {\n  _s();\n\n  var weatherProviderUrl; /////// GET WEATHER\n\n  if (false) { var queryParams, openweatherApiKey, openweatherApiUrl; } else {\n    // get weather from nextjs api routes\n    weatherProviderUrl = \"/api/myforecast?lat=\".concat(location.latitude, \"&lon=\").concat(location.longitude);\n  }\n\n  ;\n\n  var _useSWR = (0,swr__WEBPACK_IMPORTED_MODULE_0__.default)(function () {\n    return location.latitude ? weatherProviderUrl : null;\n  }, _fetchUtils__WEBPACK_IMPORTED_MODULE_1__.fetcher, cwSwrConfig),\n      data = _useSWR.data,\n      error = _useSWR.error;\n\n  return {\n    weatherData: data,\n    isLoading: !error && !data,\n    isError: error\n  };\n}\n\n_s(use5Days3hWeather, \"r2QYs02BSrn+Eu/1uMGZi8N+HnQ=\", false, function () {\n  return [swr__WEBPACK_IMPORTED_MODULE_0__.default];\n});\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2xpYi9nZXQ1RGF5czNoRm9yZWNhc3QuanM/ODdiOCJdLCJuYW1lcyI6WyJjd1N3ckNvbmZpZyIsInVzZTVEYXlzM2hXZWF0aGVyIiwibG9jYXRpb24iLCJsb2NhbGUiLCJ3ZWF0aGVyUHJvdmlkZXJVcmwiLCJwcm9jZXNzIiwibGF0aXR1ZGUiLCJsb25naXR1ZGUiLCJ1c2VTV1IiLCJmZXRjaGVyIiwiZGF0YSIsImVycm9yIiwid2VhdGhlckRhdGEiLCJpc0xvYWRpbmciLCJpc0Vycm9yIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7Q0FHQTtBQUVBOztBQUNPLElBQU1BLFdBQVcsR0FBRztBQUN6QjtBQUNBLHVCQUFxQixJQUZJO0FBR3pCLHVCQUFxQixLQUhJO0FBSXpCLDJCQUF5QixLQUpBO0FBS3pCLHNCQUFvQixLQUFHLEVBQUgsR0FBTSxJQUxEO0FBTXpCLDJCQUF5QixLQUFHLEVBQUgsR0FBTSxJQU5OO0FBT3pCLHFCQUFtQjtBQVBNLENBQXBCO0FBVUEsU0FBU0MsaUJBQVQsQ0FBMkJDLFFBQTNCLEVBQXFDQyxNQUFyQyxFQUE2QztBQUFBOztBQUNsRCxNQUFJQyxrQkFBSixDQURrRCxDQUdsRDs7QUFDQSxNQUFJQyxLQUFKLEVBQWtELDBEQUFsRCxNQWNPO0FBQ0g7QUFDQUQsc0JBQWtCLGlDQUEwQkYsUUFBUSxDQUFDSSxRQUFuQyxrQkFBbURKLFFBQVEsQ0FBQ0ssU0FBNUQsQ0FBbEI7QUFDSDs7QUFBQTs7QUFyQmlELGdCQXNCMUJDLDRDQUFNLENBQzVCO0FBQUEsV0FBTU4sUUFBUSxDQUFDSSxRQUFULEdBQW9CRixrQkFBcEIsR0FBeUMsSUFBL0M7QUFBQSxHQUQ0QixFQUN5QkssZ0RBRHpCLEVBQ2tDVCxXQURsQyxDQXRCb0I7QUFBQSxNQXNCMUNVLElBdEIwQyxXQXNCMUNBLElBdEIwQztBQUFBLE1Bc0JwQ0MsS0F0Qm9DLFdBc0JwQ0EsS0F0Qm9DOztBQXlCbEQsU0FBTztBQUNMQyxlQUFXLEVBQUVGLElBRFI7QUFFTEcsYUFBUyxFQUFFLENBQUNGLEtBQUQsSUFBVSxDQUFDRCxJQUZqQjtBQUdMSSxXQUFPLEVBQUVIO0FBSEosR0FBUDtBQUtEOztHQTlCZVYsaUI7VUFzQlVPLHdDIiwiZmlsZSI6Ii4vc3JjL2xpYi9nZXQ1RGF5czNoRm9yZWNhc3QuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdXNlU1dSIGZyb20gJ3N3cic7XG5pbXBvcnQgeyBmZXRjaGVyIH0gZnJvbSAnLi9mZXRjaFV0aWxzJztcblxuLy8gaW1wb3J0IGluaXRXRGF0YSBmcm9tICcuLi8uLi9kYXRhL2luaXRfZmRheTVfd2VhdGhlcic7XG5cbi8vIHNldCBnbG9iYWwgU1dSIGNvbmZpZ1xuZXhwb3J0IGNvbnN0IGN3U3dyQ29uZmlnID0ge1xuICAvLyAnaW5pdGlhbERhdGEnOiBpbml0V0RhdGEsXG4gICdyZXZhbGlkYXRlT25Nb3VudCc6IHRydWUsXG4gICdyZXZhbGlkYXRlT25Gb2N1cyc6IGZhbHNlLFxuICAncmV2YWxpZGF0ZU9uUmVjb25uZWN0JzogZmFsc2UsXG4gICdkZWR1cGluZ0ludGVydmFsJzogMTAqNjAqMTAwMCxcbiAgJ2ZvY3VzVGhyb3R0bGVJbnRlcnZhbCc6IDEwKjYwKjEwMDAsXG4gICdlcnJvclJldHJ5Q291bnQnOiAwXG59O1xuXG5leHBvcnQgZnVuY3Rpb24gdXNlNURheXMzaFdlYXRoZXIobG9jYXRpb24sIGxvY2FsZSkge1xuICBsZXQgd2VhdGhlclByb3ZpZGVyVXJsO1xuXG4gIC8vLy8vLy8gR0VUIFdFQVRIRVJcbiAgaWYgKHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAvLyBjYWxsIE9XTSBBUElcbiAgICAgIGNvbnN0IG9wZW53ZWF0aGVyQXBpVXJsID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfT1BFTldFQVRIRVJfQVBJX1VSTDtcbiAgICAgIGNvbnN0IG9wZW53ZWF0aGVyQXBpS2V5ID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfT1BFTldFQVRIRVJfQVBJX0tFWTtcbiAgICAgIHdlYXRoZXJQcm92aWRlclVybCA9IG5ldyBVUkwoYCR7b3BlbndlYXRoZXJBcGlVcmx9L2ZvcmVjYXN0YCk7XG4gICAgICAvLyBzZXQgd2VhdGhlciBhcGkgcGFyYW1zXG4gICAgICBsZXQgcXVlcnlQYXJhbXMgPSB7XG4gICAgICBsYXQ6IGxvY2F0aW9uICYmIGxvY2F0aW9uLmxhdGl0dWRlLCBcbiAgICAgIGxvbjogbG9jYXRpb24gJiYgbG9jYXRpb24ubG9uZ2l0dWRlLCBcbiAgICAgIGxhbmc6IGxvY2FsZSxcbiAgICAgIGFwcGlkOiBvcGVud2VhdGhlckFwaUtleSxcbiAgICAgIHVuaXRzOiAnbWV0cmljJ1xuICAgICAgfTtcbiAgICAgIE9iamVjdC5rZXlzKHF1ZXJ5UGFyYW1zKS5mb3JFYWNoKGtleSA9PiB3ZWF0aGVyUHJvdmlkZXJVcmwuc2VhcmNoUGFyYW1zLmFwcGVuZChrZXksIHF1ZXJ5UGFyYW1zW2tleV0pKTtcbiAgfSBlbHNlIHtcbiAgICAgIC8vIGdldCB3ZWF0aGVyIGZyb20gbmV4dGpzIGFwaSByb3V0ZXNcbiAgICAgIHdlYXRoZXJQcm92aWRlclVybCA9IGAvYXBpL215Zm9yZWNhc3Q/bGF0PSR7bG9jYXRpb24ubGF0aXR1ZGV9Jmxvbj0ke2xvY2F0aW9uLmxvbmdpdHVkZX1gO1xuICB9O1xuICBjb25zdCB7IGRhdGEsIGVycm9yIH0gPSB1c2VTV1IoXG4gICAgKCkgPT4gbG9jYXRpb24ubGF0aXR1ZGUgPyB3ZWF0aGVyUHJvdmlkZXJVcmwgOiBudWxsLCBmZXRjaGVyLCBjd1N3ckNvbmZpZyk7XG4gIFxuICByZXR1cm4ge1xuICAgIHdlYXRoZXJEYXRhOiBkYXRhLFxuICAgIGlzTG9hZGluZzogIWVycm9yICYmICFkYXRhLFxuICAgIGlzRXJyb3I6IGVycm9yXG4gIH1cbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/lib/get5Days3hForecast.js\n");

/***/ })

});